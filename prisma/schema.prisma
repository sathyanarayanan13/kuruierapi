datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String            @id @default(uuid())
  username         String            @unique
  email            String            @unique
  mobileNumber     String            @unique
  passwordHash     String
  isVerified       Boolean           @default(false)
  currentRole      UserRole          @default(SHIPMENT_OWNER)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  otpVerifications OtpVerification[]
  roleHistory      UserRoleHistory[]
  shipments        Shipment[]
  trips            Trip[]
}

model OtpVerification {
  id        String   @id @default(uuid())
  userId    String
  otpCode   String
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model UserRoleHistory {
  id     String   @id @default(uuid())
  userId String
  role   UserRole
  setAt  DateTime @default(now())
  user   User     @relation(fields: [userId], references: [id])
}

model Shipment {
  id                    String         @id @default(uuid())
  userId                String
  packageType           PackageType
  estimatedDeliveryDate DateTime
  weightGrams           Int
  destinationCountry    String
  packageImageUrl       String?
  status                ShipmentStatus @default(PENDING)
  lat_coordinates       String?
  long_coordinates      String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  user                  User           @relation(fields: [userId], references: [id])
}

model Trip {
  id               String     @id @default(uuid())
  userId           String
  pnrNumber        String
  fromCountry      String
  toCountry        String
  departureDate    DateTime
  status           TripStatus @default(ACCEPTING)
  flightInfo       String?
  lat_coordinates  String?
  long_coordinates String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  user             User       @relation(fields: [userId], references: [id])
}

enum UserRole {
  TRAVELLER
  SHIPMENT_OWNER
}

enum PackageType {
  DOCUMENTS
  SNACKS
  CLOTHES
  ELECTRONICS
  OTHER
}

enum ShipmentStatus {
  PENDING
  MATCHED
  IN_TRANSIT
  DELIVERED
}

enum TripStatus {
  ACCEPTING
  MAYBE_LATER
}
